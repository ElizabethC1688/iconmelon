// Generated by CoffeeScript 1.6.2
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define('views/IconSelectView', ['views/ProtoView', 'collectionViews/IconsCollectionView', 'collections/IconsCollection', 'underscore', 'jquery', 'helpers'], function(ProtoView, IconView, IconModel, _, $, helpers) {
    var IconSelectView, _ref;

    IconSelectView = (function(_super) {
      __extends(IconSelectView, _super);

      function IconSelectView() {
        _ref = IconSelectView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      IconSelectView.prototype.template = '#icon-select-view-template';

      IconSelectView.prototype.className = '';

      IconSelectView.prototype.initialize = function(o) {
        this.o = o != null ? o : {};
        this.buttonCounterTemplate = _.template(helpers.unescape($("#button-counter-template").text()));
        this.bindModelEvents();
        IconSelectView.__super__.initialize.apply(this, arguments);
        return this;
      };

      IconSelectView.prototype.bindModelEvents = function() {
        return this.model.on('change:selectedCounter', _.bind(this.renderButton, this));
      };

      IconSelectView.prototype.render = function() {
        var _this = this;

        IconSelectView.__super__.render.apply(this, arguments);
        this.renderButton();
        _.defer(function() {
          return _this.renderView();
        });
        return this;
      };

      IconSelectView.prototype.renderView = function() {
        this.iconView = new IconView({
          $el: $('#js-icon-place'),
          isRender: true,
          collection: new IconModel([{}, {}, {}, {}, {}, {}, {}, {}])
        });
        return this;
      };

      IconSelectView.prototype.renderButton = function() {
        return this.$('.btn-b').replaceWith(this.buttonCounterTemplate(this.model.toJSON()));
      };

      return IconSelectView;

    })(ProtoView);
    return IconSelectView;
  });

}).call(this);
