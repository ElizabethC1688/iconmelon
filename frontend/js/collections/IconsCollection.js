// Generated by CoffeeScript 1.6.2
(function() {
  var _this = this,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define('collections/IconsCollection', ['backbone', 'models/IconModel', 'underscore'], function(B, IconModel, _) {
    var IconsCollection, _ref;

    IconsCollection = (function(_super) {
      __extends(IconsCollection, _super);

      function IconsCollection() {
        _ref = IconsCollection.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      IconsCollection.prototype.model = IconModel;

      IconsCollection.prototype.initialize = function() {
        this.listenToPUBSUB();
        IconsCollection.__super__.initialize.apply(this, arguments);
        return this;
      };

      IconsCollection.prototype.listenToPUBSUB = function() {
        return App.vent.on('icon-select-filter:change', _.debounce(_.bind(this.filter, this), 250));
      };

      IconsCollection.prototype.filter = function(filter) {
        var pattern,
          _this = this;

        pattern = new RegExp(filter, 'g');
        return this.each(function(model) {
          return _.defer(function() {
            return model.set('isFiltered', !(model.get('name').match(pattern)) ? true : false);
          });
        });
      };

      IconsCollection.prototype.selectAll = function() {
        this.setToAll(true);
        return this.selectedCnt = this.length;
      };

      IconsCollection.prototype.deSelectAll = function() {
        this.setToAll(false);
        return this.selectedCnt = 0;
      };

      IconsCollection.prototype.setToAll = function(val) {
        var _this = this;

        return this.each(function(model) {
          return model.set('isSelected', val);
        });
      };

      return IconsCollection;

    })(B.Collection);
    return IconsCollection;
  });

}).call(this);
