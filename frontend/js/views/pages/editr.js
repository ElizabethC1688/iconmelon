// Generated by CoffeeScript 1.6.2
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define('views/pages/editr', ['views/pages/PageView', 'views/EditCollectionView', 'models/SectionModel', 'collections/SectionsCollection', 'collectionViews/SectionsCollectionLineView'], function(PageView, EditCollectionView, IconsCollectionModel, SectionsCollection, SectionsCollectionView) {
    var Edit, _ref;

    Edit = (function(_super) {
      __extends(Edit, _super);

      function Edit() {
        _ref = Edit.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      Edit.prototype.template = '#editr-page-template';

      Edit.prototype.render = function() {
        Edit.__super__.render.apply(this, arguments);
        this.renderEditCollectionView();
        this.renderCollectionsLine();
        return this;
      };

      Edit.prototype.renderCollectionsLine = function() {
        var _this = this;

        this.collectionLine = new SectionsCollectionView({
          $el: this.$('#js-collection-line-place'),
          isRender: true,
          collection: new SectionsCollection([])
        });
        this.collectionLine.collection.url = 'sections-all';
        this.collectionLine.collection.fetch().then(function() {
          var model;

          model = _this.collectionLine.collection.at(0).set('isSelected', true);
          return _this.setEditTo(model);
        });
        return this.collectionLine.collection.onSelect = function(model) {
          return _this.setEditTo(model);
        };
      };

      Edit.prototype.setEditTo = function(model) {
        this.editCollectionView.model.unset().set(model.toJSON());
        return this.editCollectionView.render();
      };

      Edit.prototype.renderEditCollectionView = function() {
        return this.editCollectionView = new EditCollectionView({
          $el: this.$('#js-edit-collection-view-place'),
          isRender: true,
          model: new IconsCollectionModel
        });
      };

      return Edit;

    })(PageView);
    return Edit;
  });

}).call(this);
